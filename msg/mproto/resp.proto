syntax = "proto3";

package mproto;

// =================================  SERVER 收到指令返回 200 pong 消息为1 开始 ===========
// SERVER RESP : MSG_ID 1
// 1.PONG
message PONG {
    int64 time = 1; // 当前时间戳 格式 毫秒(ms) 1567668727760
}

// SERVER RESP : MSG_ID 200
// 1.登录返回
message RespLogin {
    PlayerInfo playerInfo = 1;
}

// ================================= SERVER 主动推送的正常消息 300 开始 ===================

// SERVER PUSH : MSG_ID 300  // 推送房间类型列表
// 1.房间分类信息推送
message PushRoomClassify {
    repeated RoomClassify roomClassify = 1;
}

// SERVER PUSH : MSG_ID 301  // 推送房间玩家信息
// 1.推送房间玩家信息
message PushRoomPlayer {
    repeated RoomPlayer players = 1;
}

// SERVER PUSH : MSG_ID 302  // 发牌
// 2.发牌
message PushStartGame {
    repeated Card cards = 2; // 当前玩家手牌
}

// SERVER PUSH : MSG_ID 302  // 抢地主阶段
// 3.抢地主阶段
message PushGetLandlord {
    string lastPlayerId = 1; // 上个的玩家Id
    int32 lastPlayerPosition = 2; // 上个玩家座位
    int32 lastPlayerAction = 3; // 上个玩家的操作
    string playerId = 4; // 当前玩家的ID
    int32 playerPosition = 5; // 当前玩家座位号
    int32 action = 6; // 1.叫地主 ,-1 不叫 2.抢地主,-2 不抢
    int32 multi = 7; // 倍数 当前倍数
    int32 Countdown = 8; // 倒计时
}

// SERVER PUSH : MSG_ID 303  // 地主推送
// 4.出牌阶段
message PushLandlord {
    string landlordId = 1; // 地主玩家Id
    repeated Card cards = 2 ; // 底牌

}

// SERVER PUSH : MSG_ID 304  // 出牌阶段
// 5.出牌阶段
message PushPlayCard {
    string lastPlayerId = 1; // 上个操作的玩家Id
    int32 lastPlayerPosition = 2; // 上个操作的玩家座位
    repeated int32 lastPlayerCards = 3; // 上个玩家的操作
    int32 lastPlayerCardsType = 4; // 上个玩家的牌型
    bool isMustPlay = 5; // 是否必须出牌(是否随便出牌)
    int32 action = 6; // 1.叫地主 ,不叫 2.抢地主,不抢 0 第一次
    int32 Multi = 7; // 倍数 当前倍数
    int32 Countdown = 8; // 倒计时
}

// =================================  SERVER 主动推送异常指令 500 开始 ======================

// SERVER PUSH : MSG_ID 500  // 服务器断开指令
// 1.断开连接指令
message CloseConn {
    int32 code = 1; // 断开连接code  1: 3秒之后未登录断开    2: 认证失败断开  3: 在其他地方登录
    string msg = 2; // 断开msg
}

// SERVER PUSH : MSG_ID 501  // 服务器错误指令
// 1.服务器错误指令
message ErrMsg {
    int32 msgId = 1; // 错误的指令Id 客户端发送的指令
    string msg = 2; // 错误信息msg
}

// ============================================= 属性data =================================
// 1.PushStartGame
message RoomPlayer {
    PlayerInfo players = 1; // 房间里面的玩家
    int32 Position = 2; // 1,2,3 // 座位号
}

// 1. LoginResp   2.PlayerListPush
message PlayerInfo {
    string playerId = 1;
    string playerName = 2;
    string playerImg = 3;
    double gold = 4;
}

// RoomClassifyPush
message RoomClassify {
    int32 roomType = 1; // 房间类型 1 体验场 2 初级场 3 中级场 4 高级场
    double bottomPoint = 2; // 底分
    double bottomEnterPoint = 3; // 最低入场金币
}

// PushStartGame
message Card {
    int32 value = 1; // 牌值
    int32 suit = 2; // 花色 1方片 2红桃 3黑桃 4梅花 5
}